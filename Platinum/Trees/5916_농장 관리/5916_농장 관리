#include<bits/stdc++.h>
#define r int n, int s, int e
#define ll long long
#define N 100001
using namespace std;

vector <int> Gr[N], G[N];
ll seg[1 << 18], lz[1 << 18];
int P[N], S[N], D[N];
int top[N], in[N];
int n, q, i, j, o;
char ch;

void f1()
{
	ios_base::sync_with_stdio(0); cin.tie(0);
	cin >> n >> q;
	for (int t = 1; t < n; t++)
		cin >> i >> j, Gr[i].push_back(j), Gr[j].push_back(i);
}
void f2(int p)
{
	S[p] = 1;
	for(int i : Gr[p])
		if (!S[i])
		{
			D[i] = D[p] + 1;
			P[i] = p;
			f2(i);
			S[p] += S[i];
			G[p].push_back(i);
			if (S[i] > S[G[p][0]]) swap(G[p][0], G[p].back());
		}
}
void f3(int p)
{
	in[p] = ++o;
	for (int i : G[p])
		top[i] = i == G[p][0] ? top[p] : i, f3(i);
}
void f4(r)
{
	if (lz[n])
	{
		seg[n] += lz[n] * (e - s + 1);
		if (s ^ e)
			lz[n << 1] += lz[n], lz[n << 1 | 1] += lz[n];
		lz[n] = 0;
	}
}
ll f5(r, int p, int q)
{
	f4(n, s, e);
	if (s > q || e < p)
		return seg[n];
	if (s >= p && e <= q)
	{
		lz[n]++;
		f4(n, s, e);
		return seg[n];
	}
	int m = (s + e) >> 1;
	return seg[n] = f5(n << 1, s, m, p, q) + f5(n << 1 | 1, m + 1, e, p, q);
}
ll f6(r, int p, int q)
{
	f4(n, s, e);
	if (s > q || e < p)
		return 0;
	if (s >= p && e <= q)
		return seg[n];
	int m = (s + e) >> 1;
	return f6(n << 1, s, m, p, q) + f6(n << 1 | 1, m + 1, e, p, q);
}
ll f7(int p, int q, int o)
{
	ll t = 0;
	while (top[p] ^ top[q])
	{
		if (D[top[p]] < D[top[q]])
			swap(p, q);
		t += o ? f5(1, 1, n, in[top[p]], in[p]) : f6(1, 1, n, in[top[p]], in[p]);
		p = P[top[p]];
	}
	if (D[p] > D[q]) swap(p, q);
	return t + (o ? f5(1, 1, n, in[p] + 1, in[q]) : f6(1, 1, n, in[p] + 1, in[q]));
}
void f8()
{
	while (q--)
	{
		cin >> ch >> i >> j;
		if (ch == 'P')
			f7(i, j, 1);
		else
			cout << f7(i, j, 0) << '\n';
	}
}
int main()
{
	f1();
	f2(1); f3(1);
	f8();
}
